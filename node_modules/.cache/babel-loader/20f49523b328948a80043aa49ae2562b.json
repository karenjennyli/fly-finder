{"ast":null,"code":"var _jsxFileName = \"/Users/karenli/Documents/Development/finished-app/src/components/AirportInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Flights from './Flights';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AirportInfo() {\n  _s();\n\n  const [flights, setFlights] = useState([]);\n  const [places, setPlaces] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [destQuery, setDestQuery] = useState(\"\");\n  const [showFlights, setShowFlights] = useState(false);\n  const [showInvalid, setShowInvalid] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let invalid;\n\n    async function fetchMyAPI() {\n      const reqOptions = {\n        method: 'GET',\n        headers: {\n          \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n          \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n          \"useQueryString\": true\n        }\n      };\n      let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({\n        query: query\n      }), reqOptions);\n      responseOrigin = await responseOrigin.json();\n      let originId = responseOrigin.Places[0].PlaceId; // loop through responseOrigin.Places array until get good length\n      // console.log(originId)\n\n      let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({\n        query: destQuery\n      }), reqOptions);\n      responseDest = await responseDest.json();\n      let destId = responseDest.Places[0].PlaceId; // console.log(destId)\n\n      originId = query.toUpperCase();\n      destId = destQuery.toUpperCase();\n      console.log(originId, destId);\n      var response;\n      response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/2021-03-20?inboundpartialdate=2021-03-25\", reqOptions);\n      response = await response.json();\n      console.log(response);\n\n      if (response.Quotes === undefined) {\n        return;\n      }\n\n      setFlights(response.Quotes);\n      setPlaces(response.Places);\n    }\n\n    fetchMyAPI();\n    setShowFlights(true);\n    setQuery(\"\");\n    setDestQuery(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airportinfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"queryInput\",\n        children: \"Origin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"queryInput\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destQueryInput\",\n        children: \"Destination:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"destQueryInput\",\n        value: destQuery,\n        onChange: e => setDestQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this), showFlights ? /*#__PURE__*/_jsxDEV(Flights, {\n      flights: flights,\n      places: places\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AirportInfo, \"FnkDFR/X9cNlnNewBDyZMnYBOuM=\");\n\n_c = AirportInfo;\nexport default AirportInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AirportInfo\");","map":{"version":3,"sources":["/Users/karenli/Documents/Development/finished-app/src/components/AirportInfo.js"],"names":["React","useState","Flights","AirportInfo","flights","setFlights","places","setPlaces","query","setQuery","destQuery","setDestQuery","showFlights","setShowFlights","showInvalid","setShowInvalid","handleSubmit","e","preventDefault","invalid","fetchMyAPI","reqOptions","method","headers","responseOrigin","fetch","URLSearchParams","json","originId","Places","PlaceId","responseDest","destId","toUpperCase","console","log","response","Quotes","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Flights from './Flights';\n\nfunction AirportInfo() { \n    const [flights,setFlights] = useState([])\n    const [places, setPlaces] = useState([])\n    const [query, setQuery] = useState(\"\")\n    const [destQuery, setDestQuery] = useState(\"\")\n    const [showFlights, setShowFlights] = useState(false)\n    const [showInvalid, setShowInvalid] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        let invalid\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n\n            let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n            responseOrigin = await responseOrigin.json()\n            let originId = responseOrigin.Places[0].PlaceId\n            // loop through responseOrigin.Places array until get good length\n            // console.log(originId)\n\n            let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n            responseDest = await responseDest.json()\n            let destId = responseDest.Places[0].PlaceId\n            // console.log(destId)\n\n            originId = query.toUpperCase()\n            destId = destQuery.toUpperCase()\n            console.log(originId, destId)\n            \n            var response\n            response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/2021-03-20?inboundpartialdate=2021-03-25\", reqOptions)\n            response = await response.json()\n            console.log(response)\n            if (response.Quotes === undefined) {\n\n                return\n            }\n            setFlights(response.Quotes)\n            setPlaces(response.Places)\n        }\n        \n        fetchMyAPI()\n        setShowFlights(true)\n        setQuery(\"\")\n        setDestQuery(\"\")\n    }\n\n    return(\n        <div className=\"airportinfo\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"queryInput\">Origin:</label>\n                <input id=\"queryInput\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <label htmlFor=\"destQueryInput\">Destination:</label>\n                <input id=\"destQueryInput\" value={destQuery} onChange={e => setDestQuery(e.target.value)} required/>\n                <button className=\"search\">Submit</button>\n                \n           </form>\n           { showFlights ? <Flights flights={flights} places={places}></Flights> : <></>}\n        </div>\n    )\n}\n\nexport default AirportInfo;\n"]},"metadata":{},"sourceType":"module"}