{"ast":null,"code":"var _jsxFileName = \"/Users/karenli/Documents/Development/finished-app/src/components/Currency.js\";\nimport React from 'react'; // import './Flights.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Flights(props) {\n  async function fetchMyAPI() {\n    const reqOptions = {\n      method: 'GET',\n      headers: {\n        \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n        \"useQueryString\": true\n      }\n    }; // let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n    // responseOrigin = await responseOrigin.json()\n    // let originId = responseOrigin.Places[0].PlaceId\n    // // loop through responseOrigin.Places array until get good length\n    // // console.log(originId)\n    // let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n    // responseDest = await responseDest.json()\n    // let destId = responseDest.Places[0].PlaceId\n    // // console.log(destId)\n\n    let originId = query.toUpperCase();\n    let destId = destQuery.toUpperCase();\n    console.log(originId, destId);\n    var response; // response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/\" + inDate + \"?inboundpartialdate=2021-03-25\", reqOptions)\n\n    response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/\" + inDate + \"?inboundpartialdate=\" + outDate, reqOptions);\n    response = await response.json();\n    console.log(response);\n\n    if (response.Quotes === undefined) {\n      return;\n    }\n\n    setFlights(response.Quotes);\n    setPlaces(response.Places);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flights\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quote ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Min Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Direct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Origin Airport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination Airport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.flights.map(flight => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: flight.QuoteId,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: flight.QuoteId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: flight.MinPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: directDict[flight.Direct]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: codesDict[flight.OutboundLeg.OriginId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: codesDict[flight.OutboundLeg.DestinationId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Flights;\nexport default Currency;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"sources":["/Users/karenli/Documents/Development/finished-app/src/components/Currency.js"],"names":["React","Flights","props","fetchMyAPI","reqOptions","method","headers","originId","query","toUpperCase","destId","destQuery","console","log","response","fetch","inDate","outDate","json","Quotes","undefined","setFlights","setPlaces","Places","flights","map","flight","QuoteId","MinPrice","directDict","Direct","codesDict","OutboundLeg","OriginId","DestinationId","Currency"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,iBAAeC,UAAf,GAA4B;AACxB,UAAMC,UAAU,GAAG;AACfC,MAAAA,MAAM,EAAE,KADO;AAEfC,MAAAA,OAAO,EAAE;AACL,0BAAkB,oDADb;AAEL,2BAAmB,uDAFd;AAGL,0BAAkB;AAHb;AAFM,KAAnB,CADwB,CAUxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAIC,QAAQ,GAAGC,KAAK,CAACC,WAAN,EAAf;AACA,QAAIC,MAAM,GAAGC,SAAS,CAACF,WAAV,EAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAsBG,MAAtB;AAEA,QAAII,QAAJ,CAzBwB,CA0BxB;;AACAA,IAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAC,6GAA6GR,QAA7G,GAAwH,GAAxH,GAA8HG,MAA9H,GAAuI,GAAvI,GAA6IM,MAA7I,GAAsJ,sBAAtJ,GAA+KC,OAAhL,EAAyLb,UAAzL,CAAtB;AACAU,IAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACI,IAAT,EAAjB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,QAAIA,QAAQ,CAACK,MAAT,KAAoBC,SAAxB,EAAmC;AAC/B;AACH;;AACDC,IAAAA,UAAU,CAACP,QAAQ,CAACK,MAAV,CAAV;AACAG,IAAAA,SAAS,CAACR,QAAQ,CAACS,MAAV,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBACKrB,KAAK,CAACsB,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IAAI;AACzB,8BAAQ;AAAI,YAAA,EAAE,EAAEA,MAAM,CAACC,OAAf;AAAA,oCACJ;AAAA,wBAAKD,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADI,eAGJ;AAAA,wBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHI,eAIJ;AAAA,wBAAKC,UAAU,CAACH,MAAM,CAACI,MAAR;AAAf;AAAA;AAAA;AAAA;AAAA,oBAJI,eAKJ;AAAA,wBAAKC,SAAS,CAACL,MAAM,CAACM,WAAP,CAAmBC,QAApB;AAAd;AAAA;AAAA;AAAA;AAAA,oBALI,eAMJ;AAAA,wBAAKF,SAAS,CAACL,MAAM,CAACM,WAAP,CAAmBE,aAApB;AAAd;AAAA;AAAA;AAAA;AAAA,oBANI;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAQH,SATA;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;KAjEQjC,O;AAmET,eAAekC,QAAf","sourcesContent":["import React from 'react';\n// import './Flights.css';\n\nfunction Flights(props) { \n    async function fetchMyAPI() {\n        const reqOptions = {\n            method: 'GET',\n            headers: {\n                \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"useQueryString\": true\n            }\n        }\n\n        // let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n        // responseOrigin = await responseOrigin.json()\n        // let originId = responseOrigin.Places[0].PlaceId\n        // // loop through responseOrigin.Places array until get good length\n        // // console.log(originId)\n\n        // let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n        // responseDest = await responseDest.json()\n        // let destId = responseDest.Places[0].PlaceId\n        // // console.log(destId)\n\n        let originId = query.toUpperCase()\n        let destId = destQuery.toUpperCase()\n        console.log(originId, destId)\n        \n        var response\n        // response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/\" + inDate + \"?inboundpartialdate=2021-03-25\", reqOptions)\n        response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/\" + inDate + \"?inboundpartialdate=\" + outDate, reqOptions)\n        response = await response.json()\n        console.log(response)\n        if (response.Quotes === undefined) {\n            return\n        }\n        setFlights(response.Quotes)\n        setPlaces(response.Places)\n    }\n\n    return(\n        <div className=\"flights\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Quote ID</th>\n                        <th>Min Price</th>\n                        <th>Direct</th>\n                        <th>Origin Airport</th>\n                        <th>Destination Airport</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.flights.map(flight => {\n                        return (<tr id={flight.QuoteId}>\n                            <th>{flight.QuoteId}</th>\n                            {/* include currencies in price column */}\n                            <th>{flight.MinPrice}</th> \n                            <th>{directDict[flight.Direct]}</th>\n                            <th>{codesDict[flight.OutboundLeg.OriginId]}</th>\n                            <th>{codesDict[flight.OutboundLeg.DestinationId]}</th>\n                        </tr>);\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Currency;"]},"metadata":{},"sourceType":"module"}