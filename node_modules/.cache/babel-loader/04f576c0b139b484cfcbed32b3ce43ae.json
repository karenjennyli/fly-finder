{"ast":null,"code":"var _jsxFileName = \"/Users/karenli/Documents/Development/finished-app/src/components/AirportInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Flights from './Flights';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AirportInfo() {\n  _s();\n\n  const [flights, setFlights] = useState([]);\n  const [places, setPlaces] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [destQuery, setDestQuery] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [showFlights, setShowFlights] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    async function fetchMyAPI() {\n      const reqOptions = {\n        method: 'GET',\n        headers: {\n          \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n          \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n          \"useQueryString\": true\n        }\n      }; // let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n      // responseOrigin = await responseOrigin.json()\n      // let originId = responseOrigin.Places[0].PlaceId\n      // // loop through responseOrigin.Places array until get good length\n      // // console.log(originId)\n      // let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n      // responseDest = await responseDest.json()\n      // let destId = responseDest.Places[0].PlaceId\n      // // console.log(destId)\n\n      let originId = query.toUpperCase();\n      let destId = destQuery.toUpperCase();\n      console.log(originId, destId);\n      var response;\n      response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/2021-03-20?inboundpartialdate=2021-03-25\", reqOptions);\n      response = await response.json();\n      console.log(response);\n\n      if (response.Quotes === undefined) {\n        return;\n      }\n\n      setFlights(response.Quotes);\n      setPlaces(response.Places);\n    }\n\n    fetchMyAPI();\n    setShowFlights(true);\n    setQuery(\"\");\n    setDestQuery(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airportinfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"queryInput\",\n        children: \"Origin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"queryInput\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destQueryInput\",\n        children: \"Destination:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"destQueryInput\",\n        value: destQuery,\n        onChange: e => setDestQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"flightDate\",\n        children: \"Departure Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"flightDate\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this), showFlights ? /*#__PURE__*/_jsxDEV(Flights, {\n      flights: flights,\n      places: places\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AirportInfo, \"2bOC0w5TpNp9nHFHVWJJ6DbuB8M=\");\n\n_c = AirportInfo;\nexport default AirportInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AirportInfo\");","map":{"version":3,"sources":["/Users/karenli/Documents/Development/finished-app/src/components/AirportInfo.js"],"names":["React","useState","Flights","AirportInfo","flights","setFlights","places","setPlaces","query","setQuery","destQuery","setDestQuery","date","setDate","showFlights","setShowFlights","handleSubmit","e","preventDefault","fetchMyAPI","reqOptions","method","headers","originId","toUpperCase","destId","console","log","response","fetch","json","Quotes","undefined","Places","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Flights from './Flights';\n\nfunction AirportInfo() { \n    const [flights,setFlights] = useState([])\n    const [places, setPlaces] = useState([])\n    const [query, setQuery] = useState(\"\")\n    const [destQuery, setDestQuery] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [showFlights, setShowFlights] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n\n            // let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n            // responseOrigin = await responseOrigin.json()\n            // let originId = responseOrigin.Places[0].PlaceId\n            // // loop through responseOrigin.Places array until get good length\n            // // console.log(originId)\n\n            // let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n            // responseDest = await responseDest.json()\n            // let destId = responseDest.Places[0].PlaceId\n            // // console.log(destId)\n\n            let originId = query.toUpperCase()\n            let destId = destQuery.toUpperCase()\n            console.log(originId, destId)\n            \n            var response\n            response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/2021-03-20?inboundpartialdate=2021-03-25\", reqOptions)\n            response = await response.json()\n            console.log(response)\n            if (response.Quotes === undefined) {\n                return\n            }\n            setFlights(response.Quotes)\n            setPlaces(response.Places)\n        }\n        \n        fetchMyAPI()\n        setShowFlights(true)\n        setQuery(\"\")\n        setDestQuery(\"\")\n    }\n\n    return(\n        <div className=\"airportinfo\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"queryInput\">Origin:</label>\n                <input id=\"queryInput\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <label htmlFor=\"destQueryInput\">Destination:</label>\n                <input id=\"destQueryInput\" value={destQuery} onChange={e => setDestQuery(e.target.value)} required/>\n                <label htmlFor=\"flightDate\">Departure Date:</label>\n                <input type=\"date\" id=\"flightDate\" value={date} onChange={e => setDate(e.target.value)}></input>\n                <button className=\"search\">Submit</button>\n           </form>\n           { showFlights ? <Flights flights={flights} places={places}></Flights> : <></>}\n        </div>\n    )\n}\n\nexport default AirportInfo;\n"]},"metadata":{},"sourceType":"module"}