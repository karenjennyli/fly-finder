{"version":3,"sources":["components/Header.js","components/Footer.js","components/Flights.js","components/AirportInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Flights","flights","map","flight","id","QuoteId","MinPrice","Direct","OutboundLeg","OriginId","DestinationId","AirportInfo","useState","setFlights","places","setPlaces","query","setQuery","destQuery","setDestQuery","showFlights","setShowFlights","onSubmit","e","a","reqOptions","method","headers","fetch","URLSearchParams","responseOrigin","json","originId","Places","PlaceId","console","log","length","responseDest","destId","response","Quotes","preventDefault","fetchMyAPI","htmlFor","value","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.805caa7a.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) { \n    return(\n        <div className=\"header\">\n            {props.title}\n         </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './Flights.css';\n\nfunction Flights(props) { \n    // determine airport name based on place id\n\n    return(\n        <div className=\"flights\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Quote ID</th>\n                        <th>Min Price</th>\n                        <th>Direct</th>\n                        <th>Origin ID</th>\n                        <th>Destination ID</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.flights.map(flight => {\n                        return (<tr id={flight.QuoteId}>\n                            <th>{flight.QuoteId}</th>\n                            <th>{flight.MinPrice}</th>\n                            <th>{flight.Direct}</th>\n                            <th>{flight.OutboundLeg.OriginId}</th>\n                            <th>{flight.OutboundLeg.DestinationId}</th>\n                        </tr>);\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Flights;","import React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Flights from './Flights';\n\nfunction AirportInfo() { \n    const [flights,setFlights] = useState([])\n    const [places, setPlaces] = useState([])\n    const [query,setQuery] = useState(\"\")\n    const [destQuery,setDestQuery] = useState(\"\")\n    const [showFlights,setShowFlights] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": \"9c838d17b0msh9d78bbfa4f324fbp109103jsn16509938ea2e\",\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n\n            let responseOrigin = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query}), reqOptions)\n            responseOrigin = await responseOrigin.json()\n            let originId = responseOrigin.Places[0].PlaceId\n            // loop through responseOrigin.Places array until get good length\n            console.log(originId)\n            if (originId.length !== 7) {\n                return\n            }\n\n            let responseDest = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n            responseDest = await responseDest.json()\n            let destId = responseDest.Places[0].PlaceId\n            console.log(destId)\n            if (destId.length !== 7) {\n                return\n            }\n\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + \"SFO-sky\" + \"/LAX-sky/2021-03-20?inboundpartialdate=2021-03-25\", reqOptions)\n            let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originId + \"/\" + destId + \"/2021-03-20?inboundpartialdate=2021-03-25\", reqOptions)\n            response = await response.json()\n            console.log(response)\n            setFlights(response.Quotes)\n            setPlaces(response.Places)\n        }\n        fetchMyAPI()\n        setShowFlights(true)\n        setQuery(\"\")\n        setDestQuery(\"\")\n    }\n\n    return(\n        <div className=\"airportinfo\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"queryInput\">Origin:</label>\n                <input id=\"queryInput\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <label htmlFor=\"destQueryInput\">Destination:</label>\n                <input id=\"destQueryInput\" value={destQuery} onChange={e => setDestQuery(e.target.value)} required/>\n                <button className=\"search\">Submit</button>\n                \n           </form>\n           { showFlights ? <Flights flights={flights} places={places}></Flights> : <></>}\n        </div>\n    )\n}\n\nexport default AirportInfo;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AirportInfo from './components/AirportInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Flight Info\"></Header>\n      <AirportInfo></AirportInfo>\n      <Footer title=\"2021\"></Footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}